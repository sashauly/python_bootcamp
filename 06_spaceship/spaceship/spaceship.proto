syntax = "proto3";
// - Alignment (Ally/Enemy)
// - Name (can be "Unknown" for enemy ships)
// - Class, which is one of {Corvette, Frigate, Cruiser, Destroyer, Carrier, Dreadnought}
// - Length in meters
// - Size of the crew
// - Whether or not the ship is armed
// - One or more officers responsible for the ship

// - Alignment is an enum
//  - Name is a string
//  - Length is a float
//  - Class is an enum
//  - Size is an integer
//  - Armed status is a bool
//  - Each officer on board should have first name, last name and rank as strings

// The number of officers on board is a random number from 0 (for enemy ships only) to 10.

enum Alignment {
    ALLY = 0;
    ENEMY = 1;
}

enum ShipClass {
    CORVETTE = 0;
    FRIGATE = 1;
    CRUISER = 2;
    DESTROYER = 3;
    CARRIER = 4;
    DREADNOUGHT = 5;
}

message Officer {
    string first_name = 1;
    string last_name = 2;
    string rank = 3;
}

message Spaceship {
    Alignment alignment = 1;
    string name = 2;
    ShipClass ship_class = 3;
    float length = 4;
    int32 crew_size = 5;
    bool armed = 6;
    repeated Officer officers = 7;
}

message Coordinates {
    double latitude = 1;
    double longitude = 2;
  }

service SpaceshipService {
    rpc GetSpaceships(Coordinates) returns (stream Spaceship);
  }